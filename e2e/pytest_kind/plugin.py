# Code modified from the original repo: https://codeberg.org/hjacobs/pytest-kind/src/branch/main/pytest_kind
from __future__ import annotations

from pathlib import Path
from typing import Generator

import pytest
from _pytest.config.argparsing import Parser
from pytest import FixtureRequest

from .cluster import KindCluster


@pytest.fixture(scope="session")
def kind_cluster(request: FixtureRequest) -> Generator[KindCluster, None, None]:
    """Provide a Kubernetes kind cluster as test fixture."""
    print(request.config)
    name = request.config.getoption("cluster_name")
    keep = request.config.getoption("keep_cluster")
    kubeconfig = request.config.getoption("kubeconfig")
    image = request.config.getoption("kind_image")
    kind_path = request.config.getoption("kind_bin")
    kubectl_path = request.config.getoption("kind_kubectl_bin")
    cluster_config = request.config.getoption("cluster_config")
    cluster = KindCluster(
        name,
        Path(kubeconfig) if kubeconfig else None,
        image=image,
        kind_path=Path(kind_path) if kind_path else None,
        kubectl_path=Path(kubectl_path) if kubectl_path else None,
    )
    cluster.create(cluster_config)
    yield cluster
    if not keep:
        cluster.delete()


def pytest_addoption(parser: Parser) -> None:
    group = parser.getgroup("kind")
    group.addoption(
        "--cluster-name",
        default="paka-e2e",
        help="Name of the Kubernetes kind cluster",
    )
    group.addoption(
        "--keep-cluster",
        default=False,
        action="store_true",
        help="Keep the Kubernetes kind cluster (do not delete after test run)",
    )
    group.addoption(
        "--kubeconfig",
        default=None,
        help=(
            "If provided, use the specified kubeconfig "
            "instead of the one generated by the cluster"
        ),
    )
    group.addoption(
        "--cluster-config",
        default=None,
        help=("The cluster configuration file to use to create the Kind cluster."),
    )
    group.addoption(
        "--kind-image",
        default=None,
        action="store",
        type=str,
        help=(
            "If provided, use the specified docker image "
            "instead of the default one. (e.g. kindest/node:v1.20.2)"
        ),
    )
    group.addoption(
        "--kind-bin",
        default=None,
        action="store",
        type=str,
        help=(
            "If provided, use the specified kind binary instead of "
            "downloading one. Takes a filesystem path string."
        ),
    )
    group.addoption(
        "--kind-kubectl-bin",
        default=None,
        action="store",
        type=str,
        help=(
            "If provided, use the specified kubectl binary instead of "
            "downloading one. Takes a filesystem path string."
        ),
    )
